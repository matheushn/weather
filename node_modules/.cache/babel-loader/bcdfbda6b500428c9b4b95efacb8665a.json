{"ast":null,"code":"import { ApiCall } from '../ApiCall/ApiCall';\nimport { MIN_TEMP, MAX_TEMP, REQUEST_TEMPS_PENDING, REQUEST_TEMPS_SUCESS, REQUEST_TEMPS_FAILED, INPUT_USE } from './constants';\nconst urls = ['https://fcc-weather-api.glitch.me/api/current?lat=45&lon=45', 'https://fcc-weather-api.glitch.me/api/current?lat=45&lon=110', 'https://fcc-weather-api.glitch.me/api/current?lat=50&lon=115'];\nconst promises = [ApiCall(urls[0]), ApiCall(urls[1]), ApiCall(urls[2])];\nexport const checkTempMin = (number, text) => ({\n  type: MIN_TEMP,\n  temperature: number,\n  payload: text\n});\nexport const checkTempMax = (number, text) => ({\n  type: MAX_TEMP,\n  temperature: number,\n  payload: text\n});\nexport const requestTemps = () => dispatch => {\n  dispatch({\n    type: REQUEST_TEMPS_PENDING\n  });\n  Promise.all(promises).then(data => dispatch({\n    type: REQUEST_TEMPS_SUCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: REQUEST_TEMPS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"names":["ApiCall","MIN_TEMP","MAX_TEMP","REQUEST_TEMPS_PENDING","REQUEST_TEMPS_SUCESS","REQUEST_TEMPS_FAILED","INPUT_USE","urls","promises","checkTempMin","number","text","type","temperature","payload","checkTempMax","requestTemps","dispatch","Promise","all","then","data","catch","error"],"sources":["C:/Users/mathe/novop/last/src/Redux/actions.js"],"sourcesContent":["import { ApiCall } from '../ApiCall/ApiCall'\r\n\r\nimport {\r\n    MIN_TEMP,\r\n    MAX_TEMP,\r\n    REQUEST_TEMPS_PENDING,\r\n    REQUEST_TEMPS_SUCESS,\r\n    REQUEST_TEMPS_FAILED,\r\n    INPUT_USE\r\n   } from './constants'\r\n  \r\n  const urls = [ 'https://fcc-weather-api.glitch.me/api/current?lat=45&lon=45',\r\n  'https://fcc-weather-api.glitch.me/api/current?lat=45&lon=110',\r\n  'https://fcc-weather-api.glitch.me/api/current?lat=50&lon=115' ];\r\n\r\n  const promises = [ApiCall(urls[0]), ApiCall(urls[1]), ApiCall(urls[2])];\r\n \r\n  export const checkTempMin = (number,text) => ({\r\n    type: MIN_TEMP,\r\n    temperature: number,\r\n    payload: text\r\n  })\r\n\r\n  export const checkTempMax = (number,text) => (\r\n  {\r\n    type: MAX_TEMP,\r\n    temperature: number,\r\n    payload: text\r\n  }\r\n  )\r\n\r\n  export const requestTemps = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_TEMPS_PENDING })\r\n    Promise.all(promises)\r\n      .then(data =>  dispatch({ type: REQUEST_TEMPS_SUCESS, payload: data }))\r\n      .catch(error => dispatch({ type: REQUEST_TEMPS_FAILED, payload: error }))\r\n  }\r\n\r\n  "],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,SACIC,QADJ,EAEIC,QAFJ,EAGIC,qBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,SANJ,QAOU,aAPV;AASE,MAAMC,IAAI,GAAG,CAAE,6DAAF,EACb,8DADa,EAEb,8DAFa,CAAb;AAIA,MAAMC,QAAQ,GAAG,CAACR,OAAO,CAACO,IAAI,CAAC,CAAD,CAAL,CAAR,EAAmBP,OAAO,CAACO,IAAI,CAAC,CAAD,CAAL,CAA1B,EAAqCP,OAAO,CAACO,IAAI,CAAC,CAAD,CAAL,CAA5C,CAAjB;AAEA,OAAO,MAAME,YAAY,GAAG,CAACC,MAAD,EAAQC,IAAR,MAAkB;EAC5CC,IAAI,EAAEX,QADsC;EAE5CY,WAAW,EAAEH,MAF+B;EAG5CI,OAAO,EAAEH;AAHmC,CAAlB,CAArB;AAMP,OAAO,MAAMI,YAAY,GAAG,CAACL,MAAD,EAAQC,IAAR,MAC5B;EACEC,IAAI,EAAEV,QADR;EAEEW,WAAW,EAAEH,MAFf;EAGEI,OAAO,EAAEH;AAHX,CAD4B,CAArB;AAQP,OAAO,MAAMK,YAAY,GAAG,MAAOC,QAAD,IAAc;EAC9CA,QAAQ,CAAC;IAAEL,IAAI,EAAET;EAAR,CAAD,CAAR;EACAe,OAAO,CAACC,GAAR,CAAYX,QAAZ,EACGY,IADH,CACQC,IAAI,IAAKJ,QAAQ,CAAC;IAAEL,IAAI,EAAER,oBAAR;IAA8BU,OAAO,EAAEO;EAAvC,CAAD,CADzB,EAEGC,KAFH,CAESC,KAAK,IAAIN,QAAQ,CAAC;IAAEL,IAAI,EAAEP,oBAAR;IAA8BS,OAAO,EAAES;EAAvC,CAAD,CAF1B;AAGD,CALM"},"metadata":{},"sourceType":"module"}