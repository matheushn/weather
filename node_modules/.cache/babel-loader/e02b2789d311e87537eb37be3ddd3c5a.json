{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nconst TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  let {\n    state,\n    descriptors\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(View, {\n    style: styles.container\n  }, state.routes.map((route, i) => {\n    var _state$routes, _state$routes2;\n\n    const isFocused = state.index === i;\n    const canGoBack = i !== 0;\n    const previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    const nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    const previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    const {\n      options,\n      navigation,\n      render\n    } = descriptors[route.key];\n    const {\n      header,\n      headerShown,\n      headerTintColor,\n      headerBackImageSource,\n      headerLeft,\n      headerRight,\n      headerTitle,\n      headerTitleAlign,\n      headerTitleStyle,\n      headerStyle,\n      headerShadowVisible,\n      headerTransparent,\n      headerBackground,\n      headerBackTitle,\n      presentation,\n      contentStyle\n    } = options;\n    const nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return /*#__PURE__*/React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options,\n        route,\n        navigation\n      }) : /*#__PURE__*/React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? _ref2 => {\n          let {\n            tintColor\n          } = _ref2;\n          return headerLeft({\n            tintColor,\n            canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? _ref3 => {\n          let {\n            tintColor\n          } = _ref3;\n          return /*#__PURE__*/React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? () => /*#__PURE__*/React.createElement(Image, {\n              source: headerBackImageSource,\n              style: [styles.backImage, {\n                tintColor\n              }]\n            }) : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? _ref4 => {\n          let {\n            tintColor\n          } = _ref4;\n          return headerRight({\n            tintColor,\n            canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? _ref5 => {\n          let {\n            children,\n            tintColor\n          } = _ref5;\n          return headerTitle({\n            children,\n            tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, /*#__PURE__*/React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","HeaderBackButton","SafeAreaProviderCompat","Screen","React","Image","StyleSheet","View","TRANSPARENT_PRESENTATIONS","NativeStackView","state","descriptors","_ref","style","styles","container","routes","map","route","i","isFocused","index","canGoBack","previousKey","_state$routes","key","nextKey","_state$routes2","previousDescriptor","undefined","nextDescriptor","options","navigation","render","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackground","headerBackTitle","presentation","contentStyle","nextPresentation","focused","back","title","name","_ref2","tintColor","label","_ref3","backImage","source","onPress","goBack","_ref4","_ref5","children","absoluteFill","display","includes","backgroundColor","contentContainer","create","flex","height","width","margin","resizeMode"],"sources":["C:\\Users\\mathe\\novop\\last\\node_modules\\@react-navigation\\native-stack\\lib\\module\\views\\NativeStackView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackground,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nextDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerTransparent={headerTransparent}\n                    headerShadowVisible={headerShadowVisible}\n                    headerBackground={headerBackground}\n                    headerStyle={headerStyle}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}