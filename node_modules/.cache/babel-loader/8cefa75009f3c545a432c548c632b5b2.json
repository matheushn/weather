{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\novop\\\\last\\\\src\\\\Containers\\\\Temps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport './styles.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { requestTemps, checkTempMin, checkTempMax } from '../Redux/actions';\nimport InfoCard from '../Components/InfoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Temps() {\n  _s();\n\n  const [hasInput, updateInput] = useState(false);\n  const [index, updateIndex] = useState(0);\n  const main = useSelector(state => state.requestTemps.main);\n  const checkMin = useSelector(state => state.checkTempMin);\n  const checkMax = useSelector(state => state.checkTempMax);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(requestTemps());\n  }, [dispatch]);\n\n  const compareTemps = () => {\n    if (main[index].data && main[index].data.main.temp_min < checkMin.temp) {\n      console.log('dispatch', main);\n      dispatch(checkTempMin(main[index].data.main.temp_min, main[index].data.name));\n    }\n\n    if (main[index].data && main[index].data.main.temp_max > checkMax.temp) {\n      dispatch(checkTempMax(main[index].data.main.temp_max, main[index].data.name));\n    }\n  };\n\n  const updateInfo = i => {\n    updateInput(true);\n    const promise = updateIndex(i).then(compareTemps());\n    console.log(main[index].data);\n\n    if (i === 0) {\n      promise();\n    } else if (i === 1) {\n      updateIndex(1);\n      compareTemps();\n    } else if (i === 2) {\n      updateIndex(2);\n      compareTemps();\n    }\n  };\n\n  console.log(main);\n  const navigation = useNavigation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botao\",\n        title: \"Next Screen\",\n        onClick: () => navigation.navigate('Details'),\n        children: \" Mostrar Min/Max \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botao\",\n        onClick: () => updateInfo(0),\n        children: \" Cidade 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botao\",\n        onClick: () => updateInfo(1),\n        children: \" Cidade 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botao\",\n        onClick: () => updateInfo(2),\n        children: \" Cidade 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), hasInput ? /*#__PURE__*/_jsxDEV(InfoCard, {\n      index: index,\n      main: main\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \" Escolha uma cidade \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Temps, \"X1v/bIhTnn4uO5lXiF7pfer74y0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useNavigation];\n});\n\n_c = Temps;\nexport default Temps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temps\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigation","useSelector","useDispatch","requestTemps","checkTempMin","checkTempMax","InfoCard","Temps","hasInput","updateInput","index","updateIndex","main","state","checkMin","checkMax","dispatch","compareTemps","data","temp_min","temp","console","log","name","temp_max","updateInfo","i","promise","then","navigation","navigate"],"sources":["C:/Users/mathe/novop/last/src/Containers/Temps.js"],"sourcesContent":["import React, { useEffect , useState, useCallback } from 'react'\r\nimport { useNavigation} from '@react-navigation/native';\r\nimport './styles.css';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport { requestTemps, checkTempMin, checkTempMax } from '../Redux/actions'\r\nimport InfoCard from '../Components/InfoCard';\r\n\r\nfunction Temps() {\r\n    \r\n    const [hasInput, updateInput] = useState(false);\r\n    const [index, updateIndex] = useState(0);\r\n  \r\n    const main = useSelector(state => state.requestTemps.main)\r\n    const checkMin = useSelector(state => state.checkTempMin)\r\n    const checkMax = useSelector(state => state.checkTempMax)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(requestTemps());\r\n    }, [dispatch]);\r\n    \r\n    \r\n    const compareTemps = () => {\r\n      if ( main[index].data && main[index].data.main.temp_min < checkMin.temp)\r\n      { \r\n        console.log('dispatch', main)\r\n        dispatch(checkTempMin(main[index].data.main.temp_min, main[index].data.name))\r\n      }\r\n      if (main[index].data && main[index].data.main.temp_max > checkMax.temp){\r\n        dispatch(checkTempMax(main[index].data.main.temp_max, main[index].data.name))\r\n      }\r\n    }\r\n   \r\n      const updateInfo = (i) => {\r\n        updateInput(true);\r\n        const promise = updateIndex(i).then(compareTemps());\r\n\r\n        console.log(main[index].data)\r\n        if ( i === 0 )   \r\n        { \r\n          promise();\r\n        }\r\n        else if (i === 1) {\r\n         updateIndex(1);  \r\n          compareTemps();\r\n        }\r\n        else if (i === 2)\r\n        {   \r\n          updateIndex(2);\r\n          compareTemps();\r\n        }\r\n    }\r\n    \r\n    console.log(main)\r\n    const navigation = useNavigation();\r\n    return(\r\n\r\n        <div className='App'> \r\n        <h1> <button className='botao' title=\"Next Screen\" onClick={() => navigation.navigate('Details')}> Mostrar Min/Max </button></h1>\r\n        <h2>\r\n           <button className='botao' onClick={() => updateInfo(0)}> Cidade 1</button>\r\n           <button className='botao' onClick={() => updateInfo(1)}> Cidade 2</button>\r\n           <button className='botao' onClick={() => updateInfo(2)}> Cidade 3</button>\r\n        </h2>\r\n      { \r\n        hasInput ?\r\n        <InfoCard index={ index } main={ main } />\r\n        : ( <div className='card'> Escolha uma cidade </div>)\r\n      }\r\n\r\n      </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Temps\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}